{"version":3,"file":"static/js/299.5013aea8.chunk.js","mappings":"+VAEMA,EAAS,mCAER,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACSC,EAAAA,EAAAA,IAAA,kEAAqEF,IAAUG,MAAK,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,OAAhB,IADnG,0GAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,iFACSN,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,iCAA8FQ,EAA9F,gCAAqIL,MAAK,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,OAAhB,IADzJ,0GAIA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,iFACSR,EAAAA,EAAAA,IAAA,6CAAgDQ,EAAhD,oBAAkEV,EAAlE,oBAA2FG,MAAK,SAAAC,GAAM,OAAIA,EAAOC,IAAX,IAD/G,0GAIA,SAASM,EAAYC,EAASC,GAClC,MAAM,+BAAN,OAAsCA,EAAtC,YAAiDD,EACnD,CAEM,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFAEkBb,EAAAA,EAAAA,IAAA,gEAAmEF,EAAnE,oBAA4FG,MAAK,SAAAa,GAAG,OAAGA,EAAIX,KAAKY,MAAZ,IAFtH,cAEEC,EAFF,yBAIGA,EAAQC,QAAQ,SAACC,EAAKC,GAE1B,OADIN,EAAUO,SAASD,EAAQE,KAAMH,EAAII,KAAKH,EAAQI,MAC/CL,CACT,GAAE,KAPC,kEAUA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA6BhB,GAA7B,iFACSR,EAAAA,EAAAA,IAAA,6CAAgDQ,EAAhD,4BAA0EV,EAA1E,oBAAmGG,MAAK,SAAAC,GAAM,OAAIA,EAAOC,IAAX,IADvH,0GAIA,SAAesB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCjB,GAAhC,iFACSR,EAAAA,EAAAA,IAAA,6CAAgDQ,EAAhD,4BAA0EV,EAA1E,2BAA0GG,MAAK,SAAAC,GAAM,OAAIA,EAAOC,IAAX,IAD9H,0G,kGCjCP,EAAuB,mB,2BCKjBuB,GAAWC,EAAAA,EAAAA,OAAK,kBAAK,4BAAL,IA4BtB,EA1Ba,WAET,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAUC,EAAAA,EAAAA,MAAYX,GAK5B,OAHAY,EAAAA,EAAAA,YAAU,YACNT,EAAAA,EAAAA,IAAcO,GAAS9B,MAAK,SAAAa,GAAG,OAAIgB,EAAQhB,EAAIe,KAAKK,MAAM,EAAE,GAA7B,IAAkCC,OAAM,kBAAMC,MAAM,yBAAZ,GAC1E,GAAC,CAACL,KAEC,eAAIM,UAAWC,EAAf,UACE,SAAC,EAAAC,SAAD,CAAUC,UAAa,SAAC,IAAD,IAAvB,SACIX,EAAKY,OAAS,EACdZ,EAAKa,KAAI,SAACvB,GAAY,OAAO,yBAC3B,SAACO,EAAD,CACIiB,QAAYxB,EAAQyB,cAChBnC,EAAAA,EAAAA,IAAYU,EAAQyB,aAAc,KAClC,8EACJC,SAAa1B,EAAQI,KACrBuB,cAAkB3B,EAAQ4B,aANO5B,EAAQE,GAQ3C,KACN,uDAIX,C","sources":["components/modules/Api/moviesApi.js","webpack://react-homework-template/./src/components/modules/Cast/cast.module.css?d72a","components/modules/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst apiKey = 'cc6dd9af32d8d8ae276f4cac0bcc6f4a';\n\nexport async function trendingMovies () {\n   return await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`).then(result => result.data.results);\n};\n\nexport async function getMoviesByName (filmName) {\n   return await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${filmName}&page=1&include_adult=false`).then(result => result.data.results);\n};\n\nexport async function getMovieInfo (filmid) {\n   return await axios.get(`https://api.themoviedb.org/3/movie/${filmid}?api_key=${apiKey}&language=en-US`).then(result => result.data);\n};\n\nexport function getImageUrl(imgName, imgSize) {\n   return `https://image.tmdb.org/t/p/w${imgSize}/${imgName}`;\n};\n\nexport async function getGenresList(genresIds) {\n   \n   const request = await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`).then(res=> res.data.genres);\n\n   return request.reduce ((acc, element) => {\n      if (genresIds.includes(element.id)){ acc.push(element.name) }     \n      return acc;\n   }, []); \n};\n\nexport async function getMovieCast (filmid) {\n   return await axios.get(`https://api.themoviedb.org/3/movie/${filmid}/credits?api_key=${apiKey}&language=en-US`).then(result => result.data);\n};\n\nexport async function getMovieReviews (filmid) {\n   return await axios.get(`https://api.themoviedb.org/3/movie/${filmid}/reviews?api_key=${apiKey}&language=en-US&page=1`).then(result => result.data);\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast_list__DvNcY\"};","\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState, lazy, Suspense } from \"react\";\nimport s from \"./cast.module.css\"\nimport Loader from \"..//Louder/Louder\"\nimport { getMovieCast, getImageUrl } from \"..//Api/moviesApi\"\nconst CastCard = lazy(()=> import (\"./CastCard/CastCard\") );\n\nconst Cast = () => {\n\n    const [cast, setCast] = useState([]);\n    const movieId = useParams().id;\n\n    useEffect(()=>{\n        getMovieCast (movieId).then(res => setCast(res.cast.slice(0,5))).catch(() => alert('Some problems with API'));\n    },[movieId]);\n    return (\n        <ul className={s.list }>\n          <Suspense fallback = { <Loader/> }>\n            { cast.length > 0 ?\n              cast.map((element)=>{ return <li key={ element.id }>               \n                <CastCard \n                    castImg = { element.profile_path ? \n                        getImageUrl(element.profile_path, 300) : \n                        'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder' }\n                    castName = { element.name }\n                    castCharacter = { element.character}\n                />\n            </li>}) : \n            <li>There are no cast info.</li> }    \n           </Suspense>         \n        </ul>\n    )\n};\nexport default Cast;"],"names":["apiKey","trendingMovies","axios","then","result","data","results","getMoviesByName","filmName","getMovieInfo","filmid","getImageUrl","imgName","imgSize","getGenresList","genresIds","res","genres","request","reduce","acc","element","includes","id","push","name","getMovieCast","getMovieReviews","CastCard","lazy","useState","cast","setCast","movieId","useParams","useEffect","slice","catch","alert","className","s","Suspense","fallback","length","map","castImg","profile_path","castName","castCharacter","character"],"sourceRoot":""}